
ComponentType:
  superclass: BaseDataClass
  items:
  - name: name
    type: str
    
  - name: states
    type: List[str]
    default: empty
  methods:
  - name: inst
    return_type: ComponentInstance*
    params:
    - name: state
      type: str
      default: STATE_UNSET
    - name: bond
      type: int
      default: BOND_UNBOUND

  - name: inst
    return_type: ComponentInstance*
    params:
    - name: state
      type: int
      default: STATE_UNSET_INT
    - name: bond
      type: int
      default: BOND_UNBOUND
      
      
ComponentInstance:
  superclass: BaseDataClass
  items:
  - name: component_type
    type: ComponentType*

  - name: state
    type: str
    default: STATE_UNSET
    
  - name: bond
    type: int
    default: BOND_UNBOUND      
    
      
ElementaryMoleculeType:
  superclass: BaseDataClass
  items:
  - name: name
    type: str
    
  - name: components
    type: List[ComponentType*]
    default: empty

  - name: diffusion_constant_2d
    type: float
    default: unset
    doc: This molecule is constrained to a surface and diffuses with  diffusion constant D.
      
  - name: diffusion_constant_3d
    type: float
    default: unset # the value is optional and might need to be checked with a more complex check
    doc: This molecule diffuses in space with diffusion constant D. D can be zero, in which case the molecule doesn’t move. The units of D are cm 2 /s.
      
  methods:
  - name: inst
    return_type: ElementaryMoleculeInstance*
    params:
    - name: components
      type: List[ComponentInstance*]
      
      
ElementaryMoleculeInstance:
  superclass: BaseDataClass
  items:
  - name: elementary_molecule_type
    type: ElementaryMoleculeType*
    
  - name: components
    type: List[ComponentInstance*]
    default: empty

    
ComplexInstance:    
  superclass: BaseDataClass
  items:
  - name: molecule_instances
    type: List[ElementaryMoleculeInstance*]
    default: empty

  - name: orientation
    type: Orientation 
    default: Orientation.NONE
    
Species:
  superclass: ComplexInstance
  items:
  - name: name
    type: str
    doc: Name of the species

  - name: diffusion_constant_2d
    type: float
    default: unset
    doc: This molecule is constrained to a surface and diffuses with  diffusion constant D.
      
  - name: diffusion_constant_3d
    type: float
    default: unset # the value is optional and might need to be checked with a more complex check
    doc: This molecule diffuses in space with diffusion constant D. D can be zero, in which case the molecule doesn’t move. The units of D are cm 2 /s.
        
  - name: target_only
    type: bool
    default: False
    doc: |
      This molecule will not initiate reactions when it runs into other molecules. This
      setting can speed up simulations when applied to a molecule at high concentrations 
      that reacts with a molecule at low concentrations (it is more efficient for
      the low-concentration molecule to trigger the reactions). This directive does
      not affect unimolecular reactions.
      
  methods:
  - name: inst
    return_type: ComplexInstance
    doc: Only for simple species (single molecule instance, no components)
    params:
    - name: orientation
      type: Orientation 
      default: Orientation.NOT_SET
  
    
SurfaceProperty:
  superclass: BaseDataClass
  items:
  - name: type
    type: SurfacePropertyType
    default: SurfacePropertyType.UNSET
    doc: Must be set.
  
  - name: affected_species
    type: Species*
    default: unset
    doc: Must be set. 

  - name: orientation
    type: Orientation
    default: Orientation.NOT_SET
    
    
SurfaceClass:
  doc: Defining a surface class allows surfaces to behave like species (in a limited way).
  superclass: SurfaceProperty
  items:
  - name: name
    type: str
    doc: Name of the surface class
    
  - name: properties
    type: List[SurfaceProperty*]
    default: empty
    doc: | 
      A surface class can either have a list of properties or just one property.
      In the usual case of having one property, one can set the attributes 
      type, affected_species, etc. inherited from SurfaceProperty directly.


ReactionRule:    
  superclass: BaseDataClass
  items:
  - name: name
    type: str
    default: unset
    doc: | 
      Name of the reaction. If this is a reversible reaction, then it is the name of the 
      reaction in forward direction.
    
  - name: reactants
    type: List[ComplexInstance*]
    default: empty # must be set, but C++ ordering of arguments requires that all defaults are at the end
    
  - name: products
    type: List[ComplexInstance*]
    default: empty
    
  - name: fwd_rate
    type: float
    default: unset # must be set, but C++ ordering of arguments requires that all defaults are at the end
    
  - name: rev_name
    type: str
    default: unset
    doc: Name of the reaction in reverse direction.   
    
  - name: rev_rate
    type: float
    default: unset
    doc: Reverse reactions rate, reaction is unidirectional when not specified 
    
  - name: variable_rate
    type: List[List[float]]
    default: empty
    doc: | 
      Variable rate is applicable only for irreversible reactions. Members fwd_rate and rev_rate 
      must not be set. The array passed as this argument must have as its items a pair of floats (time, rate).     

Subsystem:
  items:
  - name: species
    type: List[Species*]
    default: empty
    
  - name: reaction_rules
    type: List[ReactionRule*]
    default: empty

  - name: surface_classes
    type: List[SurfaceClass*]
    default: empty    
    
  - name: elementary_molecule_types
    type: List[ElementaryMoleculeType*]
    default: empty
    doc: | 
      Used mainly when a BNGL file is loaded, if BNGL species is defined through 
      Python API, this array is populated automatically 
    
  methods:
  - name: add_species
    params:
    - name: s
      type: Species*
      
  - name: find_species
    return_type: Species*
    params:
    - name: name
      type: str
      
  - name: add_reaction_rule
    params:
    - name: r
      type: ReactionRule*
      
  - name: find_reaction_rule  
    return_type: ReactionRule*
    params:
    - name: name
      type: str

  - name: add_surface_class
    params:
    - name: sc
      type: SurfaceClass*
      
  - name: find_surface_class  
    return_type: SurfaceClass*
    params:
    - name: name
      type: str      
      
  - name: add_elementary_molecule_type
    params:
    - name: mt
      type: ElementaryMoleculeType*
      
  - name: find_elementary_molecule_type  
    return_type: ElementaryMoleculeType*
    params:
    - name: name
      type: str            
      
  - name: load_bngl_molecule_types_and_reaction_rules
    doc: | 
      Parses a BNGL file and only reads molecule types and
      reaction rules sections, e.g. ignores observables. 
      Parameter values are evaluated and the result value 
      is directly used.  
    params:
    - name: file_name
      type: str      
      