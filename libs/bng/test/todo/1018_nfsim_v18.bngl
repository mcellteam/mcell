# OK
begin model

begin parameters
    p 0.1 # dimensionless
    koff 0.1 # /s
    L_copyNum 10000 # molecules per cell
end parameters

begin molecule types
    L2(r,r,r)
    R2(l)
end molecule types

begin seed species
    L2(r!1,r!2,r!3).R2(l!1).R2(l!2).R2(l!3) L_copyNum
end seed species

begin observables
    Species free_L2 L2(r,r,r)
    Species singly_bound_L2 L2(r!+,r,r)
    Species doubly_bound_L2 L2(r!+,r!+,r)
    Species triply_bound_L2 L2(r!+,r!+,r!+)
end observables

begin reaction rules
    L2(r!1,r!2,r!3).R2(l!1).R2(l!2).R2(l!3)->L2(r!1,r!2,r).R2(l!1).R2(l!2)+R2(l) p*koff
    L2(r!1,r!2,r).R2(l!1).R2(l!2)->L2(r!1,r,r).R2(l!1)+R2(l) p*koff
    L2(r!1,r,r).R2(l!1)->L2(r,r,r)+R2(l) p*koff
    L2(r!1).R2(l!1)->L2(r)+R2(l) (1-p)*koff
end reaction rules

end model

begin actions
    generate_network({overwrite=>1})
    simulate({suffix=>"ode",method=>"ode",t_start=>0,t_end=>10,n_steps=>100})
    resetConcentrations()
    simulate({suffix=>"ssa",method=>"ssa",t_start=>0,t_end=>10,n_steps=>100})
    resetConcentrations()
    writeXML()
    #simulate({suffix=>"nf",method=>"nf",complex=>1,t_start=>0,t_end=>10,n_steps=>100})
end actions